/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 10 11:33:56 GMT 2020
 */

package com.recruit.recruitment.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.recruit.recruitment.config.ErrorConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.springframework.boot.web.server.ErrorPageRegistry;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ErrorConfig_ESTest extends ErrorConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ErrorConfig errorConfig0 = new ErrorConfig();
      // Undeclared exception!
      try { 
        errorConfig0.registerErrorPages((ErrorPageRegistry) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.recruit.recruitment.config.ErrorConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ErrorConfig errorConfig0 = new ErrorConfig();
      ErrorPageRegistry errorPageRegistry0 = mock(ErrorPageRegistry.class, new ViolatedAssumptionAnswer());
      errorConfig0.registerErrorPages(errorPageRegistry0);
  }
}
