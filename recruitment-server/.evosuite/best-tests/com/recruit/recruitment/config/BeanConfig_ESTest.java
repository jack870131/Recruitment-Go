/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 10 11:35:05 GMT 2020
 */

package com.recruit.recruitment.config;

import org.junit.Test;
import static org.junit.Assert.*;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.recruit.recruitment.config.BeanConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.springframework.amqp.core.Queue;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BeanConfig_ESTest extends BeanConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BeanConfig beanConfig0 = new BeanConfig();
      Queue queue0 = beanConfig0.sendSmsQueue();
      assertEquals("MAIL_CODE", queue0.getActualName());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BeanConfig beanConfig0 = new BeanConfig();
      ObjectMapper objectMapper0 = beanConfig0.objectMapper();
      assertNotNull(objectMapper0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BeanConfig beanConfig0 = new BeanConfig();
      BCryptPasswordEncoder bCryptPasswordEncoder0 = beanConfig0.encoder();
      assertNotNull(bCryptPasswordEncoder0);
  }
}
