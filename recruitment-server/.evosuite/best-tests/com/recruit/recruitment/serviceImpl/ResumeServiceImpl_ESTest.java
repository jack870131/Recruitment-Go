/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 10 11:03:26 GMT 2020
 */

package com.recruit.recruitment.serviceImpl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.recruit.recruitment.config.JwtConfig;
import com.recruit.recruitment.mapper.ApplicationMapper;
import com.recruit.recruitment.mapper.JobMapper;
import com.recruit.recruitment.mapper.UserMapper;
import com.recruit.recruitment.model.pojo.Application;
import com.recruit.recruitment.model.pojo.Resume;
import com.recruit.recruitment.serviceImpl.JobServiceImpl;
import com.recruit.recruitment.serviceImpl.ResumeServiceImpl;
import com.recruit.recruitment.utils.JwtTokenUtil;
import javax.servlet.http.HttpServletRequestWrapper;
import javax.swing.JLayeredPane;
import org.apache.catalina.connector.Connector;
import org.apache.catalina.connector.Request;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResumeServiceImpl_ESTest extends ResumeServiceImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ResumeServiceImpl resumeServiceImpl0 = new ResumeServiceImpl();
      ApplicationMapper applicationMapper0 = mock(ApplicationMapper.class, new ViolatedAssumptionAnswer());
      Injector.inject(resumeServiceImpl0, (Class<?>) ResumeServiceImpl.class, "applicationMapper", (Object) applicationMapper0);
      Resume resume0 = new Resume();
      // Undeclared exception!
      try { 
        resumeServiceImpl0.updateResume(resume0, "!O|:V4}HwxH)ih4");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.recruit.recruitment.serviceImpl.ResumeServiceImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ResumeServiceImpl resumeServiceImpl0 = new ResumeServiceImpl();
      ApplicationMapper applicationMapper0 = mock(ApplicationMapper.class, new ViolatedAssumptionAnswer());
      Injector.inject(resumeServiceImpl0, (Class<?>) ResumeServiceImpl.class, "applicationMapper", (Object) applicationMapper0);
      // Undeclared exception!
      try { 
        resumeServiceImpl0.browseResumes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.recruit.recruitment.serviceImpl.ResumeServiceImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ResumeServiceImpl resumeServiceImpl0 = new ResumeServiceImpl();
      ApplicationMapper applicationMapper0 = mock(ApplicationMapper.class, new ViolatedAssumptionAnswer());
      Injector.inject(resumeServiceImpl0, (Class<?>) ResumeServiceImpl.class, "applicationMapper", (Object) applicationMapper0);
      JobServiceImpl jobServiceImpl0 = new JobServiceImpl();
      JobMapper jobMapper0 = mock(JobMapper.class, new ViolatedAssumptionAnswer());
      Injector.inject(jobServiceImpl0, (Class<?>) JobServiceImpl.class, "jobMapper", (Object) jobMapper0);
      JwtTokenUtil jwtTokenUtil0 = new JwtTokenUtil();
      JwtConfig jwtConfig0 = new JwtConfig();
      Injector.inject(jwtTokenUtil0, (Class<?>) JwtTokenUtil.class, "jwtConfig", (Object) jwtConfig0);
      Injector.validateBean(jwtTokenUtil0, (Class<?>) JwtTokenUtil.class);
      Injector.inject(jobServiceImpl0, (Class<?>) JobServiceImpl.class, "jwtTokenUtil", (Object) jwtTokenUtil0);
      Connector connector0 = new Connector("TOKEN_");
      Request request0 = new Request(connector0);
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(request0);
      Injector.inject(jobServiceImpl0, (Class<?>) JobServiceImpl.class, "request", (Object) httpServletRequestWrapper0);
      UserMapper userMapper0 = resumeServiceImpl0.userMapper;
      Injector.inject(jobServiceImpl0, (Class<?>) JobServiceImpl.class, "userMapper", (Object) null);
      // Undeclared exception!
      try { 
        resumeServiceImpl0.findResumeByUsername();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.recruit.recruitment.serviceImpl.ResumeServiceImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ResumeServiceImpl resumeServiceImpl0 = new ResumeServiceImpl();
      ApplicationMapper applicationMapper0 = mock(ApplicationMapper.class, new ViolatedAssumptionAnswer());
      Injector.inject(resumeServiceImpl0, (Class<?>) ResumeServiceImpl.class, "applicationMapper", (Object) applicationMapper0);
      Resume resume0 = new Resume();
      // Undeclared exception!
      try { 
        resumeServiceImpl0.addResume(resume0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.recruit.recruitment.serviceImpl.ResumeServiceImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      ResumeServiceImpl resumeServiceImpl0 = new ResumeServiceImpl();
      ApplicationMapper applicationMapper0 = mock(ApplicationMapper.class, new ViolatedAssumptionAnswer());
      doReturn((Application) null).when(applicationMapper0).selectByPrimaryKey(anyInt());
      Injector.inject(resumeServiceImpl0, (Class<?>) ResumeServiceImpl.class, "applicationMapper", (Object) applicationMapper0);
      // Undeclared exception!
      try { 
        resumeServiceImpl0.findResumeByApplicationid(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.recruit.recruitment.serviceImpl.ResumeServiceImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ResumeServiceImpl resumeServiceImpl0 = new ResumeServiceImpl();
      ApplicationMapper applicationMapper0 = mock(ApplicationMapper.class, new ViolatedAssumptionAnswer());
      Injector.inject(resumeServiceImpl0, (Class<?>) ResumeServiceImpl.class, "applicationMapper", (Object) applicationMapper0);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      // Undeclared exception!
      try { 
        resumeServiceImpl0.findResumeByResumeid(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.recruit.recruitment.serviceImpl.ResumeServiceImpl", e);
      }
  }
}
