/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 09 22:25:57 GMT 2020
 */

package com.recruit.recruitment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.recruit.recruitment.RecruitmentApplication;
import java.util.Enumeration;
import javax.servlet.ServletContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.springframework.boot.builder.SpringApplicationBuilder;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RecruitmentApplication_ESTest extends RecruitmentApplication_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RecruitmentApplication recruitmentApplication0 = new RecruitmentApplication();
      SpringApplicationBuilder springApplicationBuilder0 = mock(SpringApplicationBuilder.class, new ViolatedAssumptionAnswer());
      doReturn((SpringApplicationBuilder) null).when(springApplicationBuilder0).sources(nullable(java.lang.Class[].class));
      recruitmentApplication0.configure(springApplicationBuilder0);
      // Undeclared exception!
      try { 
        recruitmentApplication0.configure((SpringApplicationBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.recruit.recruitment.RecruitmentApplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RecruitmentApplication recruitmentApplication0 = new RecruitmentApplication();
      ServletContext servletContext0 = mock(ServletContext.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(servletContext0).getAttribute(anyString());
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(servletContext0).getInitParameter(anyString());
      doReturn((Enumeration) null, (Enumeration) null, (Enumeration) null, (Enumeration) null, (Enumeration) null).when(servletContext0).getInitParameterNames();
      // Undeclared exception!
      try { 
        recruitmentApplication0.onStartup(servletContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springframework.boot.autoconfigure.condition.OnClassCondition", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RecruitmentApplication recruitmentApplication0 = new RecruitmentApplication();
      SpringApplicationBuilder springApplicationBuilder0 = mock(SpringApplicationBuilder.class, new ViolatedAssumptionAnswer());
      ServletContext servletContext0 = mock(ServletContext.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(servletContext0).getAttribute(anyString());
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(servletContext0).getInitParameter(anyString());
      doReturn((Enumeration) null, (Enumeration) null, (Enumeration) null, (Enumeration) null, (Enumeration) null).when(servletContext0).getInitParameterNames();
      // Undeclared exception!
      try { 
        recruitmentApplication0.onStartup(servletContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springframework.boot.autoconfigure.condition.OnClassCondition", e);
      }
  }
}
