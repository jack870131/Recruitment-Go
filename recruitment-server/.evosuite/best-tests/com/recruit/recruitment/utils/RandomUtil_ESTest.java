/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 09 22:28:06 GMT 2020
 */

package com.recruit.recruitment.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.recruit.recruitment.utils.RandomUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RandomUtil_ESTest extends RandomUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RandomUtil randomUtil0 = new RandomUtil();
      int int0 = randomUtil0.nextInt((-1), 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RandomUtil randomUtil0 = new RandomUtil();
      int int0 = randomUtil0.nextInt((-3701), (-3080));
      assertEquals((-3700), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RandomUtil randomUtil0 = new RandomUtil();
      // Undeclared exception!
      try { 
        randomUtil0.nextInt(0, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.evosuite.runtime.Random", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RandomUtil randomUtil0 = new RandomUtil();
      int int0 = randomUtil0.nextInt(648, (-110));
      assertEquals(649, int0);
  }
}
