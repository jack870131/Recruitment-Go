/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 10 11:25:31 GMT 2020
 */

package com.recruit.recruitment.model.pojo;

import org.junit.Test;
import static org.junit.Assert.*;
import com.recruit.recruitment.model.pojo.Role;
import com.recruit.recruitment.model.pojo.User;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class User_ESTest extends User_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      User user0 = new User();
      user0.setUsername("d#J'`;3U$S>DI");
      String string0 = user0.getUsername();
      assertEquals("d#J'`;3U$S>DI", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      User user0 = new User();
      user0.setUsername("");
      String string0 = user0.getUsername();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      User user0 = new User();
      Integer integer0 = new Integer(0);
      user0.setUserid(integer0);
      Integer integer1 = user0.getUserid();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      User user0 = new User();
      Integer integer0 = new Integer((-950));
      user0.setUserid(integer0);
      Integer integer1 = user0.getUserid();
      assertEquals((-950), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      User user0 = new User();
      Integer integer0 = new Integer(1279);
      user0.setUserid(integer0);
      Integer integer1 = user0.getUserid();
      assertEquals(1279, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("");
      String string0 = user0.getPassword();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      User user0 = new User();
      user0.setMail("@ziaKoK:s>");
      String string0 = user0.getMail();
      assertEquals("@ziaKoK:s>", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      User user0 = new User();
      user0.setMail("");
      String string0 = user0.getMail();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      User user0 = new User();
      user0.setUsername((String) null);
      assertNull(user0.getPassword());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      User user0 = new User();
      user0.setPassword((String) null);
      assertNull(user0.getMail());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("~_J+ayNE\"Da#gq9s");
      String string0 = user0.getPassword();
      assertEquals("~_J+ayNE\"Da#gq9s", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      User user0 = new User();
      user0.setMail((String) null);
      assertNull(user0.getUsername());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getUsername();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      User user0 = new User();
      Integer integer0 = user0.getUserid();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getPassword();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      User user0 = new User();
      List<Role> list0 = user0.getRoles();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      User user0 = new User();
      user0.setRoles((List<Role>) null);
      assertNull(user0.getPassword());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      User user0 = new User();
      String string0 = user0.getMail();
      assertNull(string0);
  }
}
