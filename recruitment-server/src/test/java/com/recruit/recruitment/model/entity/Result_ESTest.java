/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 10 11:33:42 GMT 2020
 */

package com.recruit.recruitment.model.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import com.recruit.recruitment.model.entity.Result;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class Result_ESTest extends Result_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Result result0 = Result.create((Integer) null, "+q>pTF:uoV:OKQiv_]");
      String string0 = result0.getMessage();
      assertEquals("+q>pTF:uoV:OKQiv_]", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Result result0 = Result.create((Integer) null, "", (Object) null);
      String string0 = result0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(1762);
      Result result0 = Result.create(integer0, "", (Object) integer0);
      Object object0 = result0.getData();
      assertEquals(1762, object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Result result0 = Result.create((Integer) null, "com.recruit.recruitment.model.entity.Result", (Object) "com.recruit.recruitment.model.entity.Result");
      Integer integer0 = result0.getCode();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer((-234));
      Result result0 = Result.create(integer0, "a");
      Integer integer1 = result0.getCode();
      assertEquals((-234), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(1690);
      Result result0 = Result.create(integer0, "r{rk@`|,~K]vmM");
      Integer integer1 = result0.getCode();
      assertEquals(1690, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Result result0 = Result.create((Integer) null, "}>uh'X");
      result0.setData((Object) null);
      assertNull(result0.getCode());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      Result result0 = Result.create(integer0, "D+%~ec3Y7+*~).DZfL", (Object) integer0);
      result0.setMessage("D+%~ec3Y7+*~).DZfL");
      assertEquals((-1), (int)result0.getCode());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Result result0 = Result.create(integer0, (String) null);
      result0.setCode(integer0);
      assertNull(result0.getMessage());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer(1690);
      Result result0 = Result.create(integer0, "r{rk@`|,~K]vmM");
      Object object0 = result0.getData();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Result result0 = Result.create(integer0, "ku[DU)$K.kCjDq5");
      Integer integer1 = result0.getCode();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Result result0 = Result.create(integer0, (String) null, (Object) integer0);
      String string0 = result0.getMessage();
      assertNull(string0);
  }
}
