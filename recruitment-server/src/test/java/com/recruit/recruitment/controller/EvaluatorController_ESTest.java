/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 10 13:01:29 GMT 2020
 */

package com.recruit.recruitment.controller;

import org.junit.Test;

import static org.evosuite.shaded.org.mockito.Mockito.*;

import com.recruit.recruitment.service.EvaluatorService;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class EvaluatorController_ESTest extends EvaluatorController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EvaluatorController evaluatorController0 = new EvaluatorController();
      EvaluatorService evaluatorService0 = mock(EvaluatorService.class, new ViolatedAssumptionAnswer());
      Injector.inject(evaluatorController0, (Class<?>) EvaluatorController.class, "evaluatorService", (Object) evaluatorService0);
      Injector.validateBean(evaluatorController0, (Class<?>) EvaluatorController.class);
      evaluatorController0.evaluatorService = null;
      evaluatorController0.getEvaluatorsByPostid((Integer) null);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EvaluatorController evaluatorController0 = new EvaluatorController();
      EvaluatorService evaluatorService0 = mock(EvaluatorService.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(evaluatorService0).findEvaluatorsByPostidWithoutUser(anyInt());
      Injector.inject(evaluatorController0, (Class<?>) EvaluatorController.class, "evaluatorService", (Object) evaluatorService0);
      Injector.validateBean(evaluatorController0, (Class<?>) EvaluatorController.class);
      evaluatorController0.getEvaluatorsByPostid((Integer) null);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EvaluatorController evaluatorController0 = new EvaluatorController();
      EvaluatorService evaluatorService0 = mock(EvaluatorService.class, new ViolatedAssumptionAnswer());
      Injector.inject(evaluatorController0, (Class<?>) EvaluatorController.class, "evaluatorService", (Object) evaluatorService0);
      Injector.validateBean(evaluatorController0, (Class<?>) EvaluatorController.class);
      evaluatorController0.evaluatorService = null;
      evaluatorController0.getEvaluatorsByPostid((Integer) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EvaluatorController evaluatorController0 = new EvaluatorController();
      EvaluatorService evaluatorService0 = mock(EvaluatorService.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(evaluatorService0).findEvaluatorsByPostidWithoutUser(anyInt());
      Injector.inject(evaluatorController0, (Class<?>) EvaluatorController.class, "evaluatorService", (Object) evaluatorService0);
      Injector.validateBean(evaluatorController0, (Class<?>) EvaluatorController.class);
      evaluatorController0.getEvaluatorsByPostid((Integer) null);
  }
}
